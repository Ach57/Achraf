section .data
    x db 79 ; Last two digits of my phone number
    y db 65 ; last two digits of my Student ID
    msg db "X+Y is equal to: " 
    len equ $-msg
    result db 10   ; Buffer to store the result string

section .text
    global _start

print_Message: ; Prints message X+Y is equal to: 
    mov ecx, msg
    mov edx, len
    mov eax, 4
    mov ebx, 1
    int 80h
    ret

exit_program: ; exist the code
    mov eax, 1
    xor ebx, ebx  ; Exit code 0
    int 80h

_start:
    call print_Message ; calling the print function

    ; Add x and y
    movzx eax, byte [x]  ; Load x into EAX, from zero to 32 bits
    movzx ebx, byte [y]  ; Load y into EBX, from zero to 32 bits
    sub eax, ebx         ; Substracting y from x ( 79 - 65 = 14)
    ; Now, EAX holds the result of x + y = 144

    ; Convert the result to a string
    mov esi, result      ; Point to the beginning of the result buffer
    mov ecx, 2          ; Counter for number of digits in the result

convert_loop: ; converting the result to a string with a loop 
    xor edx, edx        ; Clear EDX for division
    mov ebx, 10          ; Divisor = 10 stored in eax
    div ebx             ; Divide EAX by 10, quotient in EAX, remainder in EDX
    add dl, '0'         ; Convert the remainder to ASCII character
    dec esi             ; Move back one position in the buffer
    mov [esi], dl       ; Store the ASCII character in the buffer
    loop convert_loop   ; Repeat until all digits are converted 

    ; Print the result string
    mov edx, 2         ; Length of the result string
    mov ecx, esi        ; ECX points to the beginning of the result string
    mov eax, 4
    mov ebx, 1
    int 80h

    ; Exit the program
    call exit_program


